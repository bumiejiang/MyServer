// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Command.proto

#include "Command.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace GameMsg {
	class CommandDefaultTypeInternal {
	public:
		::google::protobuf::internal::ExplicitlyConstructed<Command>
			_instance;
	} _Command_default_instance_;
	class CommandParamsDefaultTypeInternal {
	public:
		::google::protobuf::internal::ExplicitlyConstructed<CommandParams>
			_instance;
	} _CommandParams_default_instance_;
	class LoginInfoDefaultTypeInternal {
	public:
		::google::protobuf::internal::ExplicitlyConstructed<LoginInfo>
			_instance;
	} _LoginInfo_default_instance_;
	class GameOperationDefaultTypeInternal {
	public:
		::google::protobuf::internal::ExplicitlyConstructed<GameOperation>
			_instance;
	} _GameOperation_default_instance_;
}  // namespace GameMsg
namespace protobuf_Command_2eproto {
	void InitDefaultsCommandImpl() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
		::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		protobuf_Command_2eproto::InitDefaultsCommandParams();
		{
			void* ptr = &::GameMsg::_Command_default_instance_;
			new (ptr) ::GameMsg::Command();
			::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
		}
		::GameMsg::Command::InitAsDefaultInstance();
	}

	void InitDefaultsCommand() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCommandImpl);
	}

	void InitDefaultsCommandParamsImpl() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
		::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		protobuf_Command_2eproto::InitDefaultsLoginInfo();
		protobuf_Command_2eproto::InitDefaultsGameOperation();
		{
			void* ptr = &::GameMsg::_CommandParams_default_instance_;
			new (ptr) ::GameMsg::CommandParams();
			::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
		}
		::GameMsg::CommandParams::InitAsDefaultInstance();
	}

	void InitDefaultsCommandParams() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCommandParamsImpl);
	}

	void InitDefaultsLoginInfoImpl() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
		::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		{
			void* ptr = &::GameMsg::_LoginInfo_default_instance_;
			new (ptr) ::GameMsg::LoginInfo();
			::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
		}
		::GameMsg::LoginInfo::InitAsDefaultInstance();
	}

	void InitDefaultsLoginInfo() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoginInfoImpl);
	}

	void InitDefaultsGameOperationImpl() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
		::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		{
			void* ptr = &::GameMsg::_GameOperation_default_instance_;
			new (ptr) ::GameMsg::GameOperation();
			::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
		}
		::GameMsg::GameOperation::InitAsDefaultInstance();
	}

	void InitDefaultsGameOperation() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGameOperationImpl);
	}

	::google::protobuf::Metadata file_level_metadata[4];

	const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
	  ~0u,  // no _has_bits_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::Command, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::Command, commandid_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::Command, commandparams_),
	  ~0u,  // no _has_bits_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::CommandParams, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::CommandParams, playerid_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::CommandParams, logininfo_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::CommandParams, gameoperation_),
	  ~0u,  // no _has_bits_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::LoginInfo, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::LoginInfo, username_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::LoginInfo, password_),
	  ~0u,  // no _has_bits_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::GameOperation, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::GameOperation, moveforward_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::GameOperation, moveback_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::GameOperation, moveleft_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::GameOperation, moveright_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::GameOperation, rotation_),
	};
	static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
	  { 0, -1, sizeof(::GameMsg::Command)},
	  { 7, -1, sizeof(::GameMsg::CommandParams)},
	  { 15, -1, sizeof(::GameMsg::LoginInfo)},
	  { 22, -1, sizeof(::GameMsg::GameOperation)},
	};

	static ::google::protobuf::Message const* const file_default_instances[] = {
	  reinterpret_cast<const ::google::protobuf::Message*>(&::GameMsg::_Command_default_instance_),
	  reinterpret_cast<const ::google::protobuf::Message*>(&::GameMsg::_CommandParams_default_instance_),
	  reinterpret_cast<const ::google::protobuf::Message*>(&::GameMsg::_LoginInfo_default_instance_),
	  reinterpret_cast<const ::google::protobuf::Message*>(&::GameMsg::_GameOperation_default_instance_),
	};

	void protobuf_AssignDescriptors() {
		AddDescriptors();
		::google::protobuf::MessageFactory* factory = NULL;
		AssignDescriptors(
			"Command.proto", schemas, file_default_instances, TableStruct::offsets, factory,
			file_level_metadata, NULL, NULL);
	}

	void protobuf_AssignDescriptorsOnce() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
	}

	void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
	void protobuf_RegisterTypes(const ::std::string&) {
		protobuf_AssignDescriptorsOnce();
		::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
	}

	void AddDescriptorsImpl() {
		InitDefaults();
		static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
			"\n\rCommand.proto\022\007GameMsg\"K\n\007Command\022\021\n\tc"
			"ommandID\030\001 \001(\005\022-\n\rcommandParams\030\002 \001(\0132\026."
			"GameMsg.CommandParams\"w\n\rCommandParams\022\020"
			"\n\010playerID\030\001 \001(\005\022%\n\tloginInfo\030\002 \001(\0132\022.Ga"
			"meMsg.LoginInfo\022-\n\rgameOperation\030\003 \001(\0132\026"
			".GameMsg.GameOperation\"/\n\tLoginInfo\022\020\n\010u"
			"sername\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"m\n\rGameO"
			"peration\022\023\n\013moveForward\030\001 \001(\010\022\020\n\010moveBac"
			"k\030\002 \001(\010\022\020\n\010moveLeft\030\003 \001(\010\022\021\n\tmoveRight\030\004"
			" \001(\010\022\020\n\010rotation\030\005 \001(\005b\006proto3"
		};
		::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
			descriptor, 390);
		::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
			"Command.proto", &protobuf_RegisterTypes);
	}

	void AddDescriptors() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
	}
	// Force AddDescriptors() to be called at dynamic initialization time.
	struct StaticDescriptorInitializer {
		StaticDescriptorInitializer() {
			AddDescriptors();
		}
	} static_descriptor_initializer;
}  // namespace protobuf_Command_2eproto
namespace GameMsg {

	// ===================================================================

	void Command::InitAsDefaultInstance() {
		::GameMsg::_Command_default_instance_._instance.get_mutable()->commandparams_ = const_cast<::GameMsg::CommandParams*>(
			::GameMsg::CommandParams::internal_default_instance());
	}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
	const int Command::kCommandIDFieldNumber;
	const int Command::kCommandParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

	Command::Command()
		: ::google::protobuf::Message(), _internal_metadata_(NULL) {
		if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
			::protobuf_Command_2eproto::InitDefaultsCommand();
		}
		SharedCtor();
		// @@protoc_insertion_point(constructor:GameMsg.Command)
	}
	Command::Command(const Command& from)
		: ::google::protobuf::Message(),
		_internal_metadata_(NULL),
		_cached_size_(0) {
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		if (from.has_commandparams()) {
			commandparams_ = new ::GameMsg::CommandParams(*from.commandparams_);
		}
		else {
			commandparams_ = NULL;
		}
		commandid_ = from.commandid_;
		// @@protoc_insertion_point(copy_constructor:GameMsg.Command)
	}

	void Command::SharedCtor() {
		::memset(&commandparams_, 0, static_cast<size_t>(
			reinterpret_cast<char*>(&commandid_) -
			reinterpret_cast<char*>(&commandparams_)) + sizeof(commandid_));
		_cached_size_ = 0;
	}

	Command::~Command() {
		// @@protoc_insertion_point(destructor:GameMsg.Command)
		SharedDtor();
	}

	void Command::SharedDtor() {
		if (this != internal_default_instance()) delete commandparams_;
	}

	void Command::SetCachedSize(int size) const {
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
	}
	const ::google::protobuf::Descriptor* Command::descriptor() {
		::protobuf_Command_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_Command_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
	}

	const Command& Command::default_instance() {
		::protobuf_Command_2eproto::InitDefaultsCommand();
		return *internal_default_instance();
	}

	Command* Command::New(::google::protobuf::Arena* arena) const {
		Command* n = new Command;
		if (arena != NULL) {
			arena->Own(n);
		}
		return n;
	}

	void Command::Clear() {
		// @@protoc_insertion_point(message_clear_start:GameMsg.Command)
		::google::protobuf::uint32 cached_has_bits = 0;
		// Prevent compiler warnings about cached_has_bits being unused
		(void)cached_has_bits;

		if (GetArenaNoVirtual() == NULL && commandparams_ != NULL) {
			delete commandparams_;
		}
		commandparams_ = NULL;
		commandid_ = 0;
		_internal_metadata_.Clear();
	}

	bool Command::MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
		::google::protobuf::uint32 tag;
		// @@protoc_insertion_point(parse_start:GameMsg.Command)
		for (;;) {
			::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
			tag = p.first;
			if (!p.second) goto handle_unusual;
			switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
				// int32 commandID = 1;
			case 1: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

					DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
						::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
							input, &commandid_)));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

				  // .GameMsg.CommandParams commandParams = 2;
			case 2: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
					DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
						input, mutable_commandparams()));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

			default: {
			handle_unusual:
				if (tag == 0) {
					goto success;
				}
				DO_(::google::protobuf::internal::WireFormat::SkipField(
					input, tag, _internal_metadata_.mutable_unknown_fields()));
				break;
			}
			}
		}
	success:
		// @@protoc_insertion_point(parse_success:GameMsg.Command)
		return true;
	failure:
		// @@protoc_insertion_point(parse_failure:GameMsg.Command)
		return false;
#undef DO_
	}

	void Command::SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const {
		// @@protoc_insertion_point(serialize_start:GameMsg.Command)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// int32 commandID = 1;
		if (this->commandid() != 0) {
			::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->commandid(), output);
		}

		// .GameMsg.CommandParams commandParams = 2;
		if (this->has_commandparams()) {
			::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
				2, *this->commandparams_, output);
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			::google::protobuf::internal::WireFormat::SerializeUnknownFields(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), output);
		}
		// @@protoc_insertion_point(serialize_end:GameMsg.Command)
	}

	::google::protobuf::uint8* Command::InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const {
		(void)deterministic; // Unused
		// @@protoc_insertion_point(serialize_to_array_start:GameMsg.Command)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// int32 commandID = 1;
		if (this->commandid() != 0) {
			target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->commandid(), target);
		}

		// .GameMsg.CommandParams commandParams = 2;
		if (this->has_commandparams()) {
			target = ::google::protobuf::internal::WireFormatLite::
				InternalWriteMessageToArray(
					2, *this->commandparams_, deterministic, target);
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), target);
		}
		// @@protoc_insertion_point(serialize_to_array_end:GameMsg.Command)
		return target;
	}

	size_t Command::ByteSizeLong() const {
		// @@protoc_insertion_point(message_byte_size_start:GameMsg.Command)
		size_t total_size = 0;

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			total_size +=
				::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
					(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()));
		}
		// .GameMsg.CommandParams commandParams = 2;
		if (this->has_commandparams()) {
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::MessageSize(
					*this->commandparams_);
		}

		// int32 commandID = 1;
		if (this->commandid() != 0) {
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::Int32Size(
					this->commandid());
		}

		int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = cached_size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
		return total_size;
	}

	void Command::MergeFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_merge_from_start:GameMsg.Command)
		GOOGLE_DCHECK_NE(&from, this);
		const Command* source =
			::google::protobuf::internal::DynamicCastToGenerated<const Command>(
				&from);
		if (source == NULL) {
			// @@protoc_insertion_point(generalized_merge_from_cast_fail:GameMsg.Command)
			::google::protobuf::internal::ReflectionOps::Merge(from, this);
		}
		else {
			// @@protoc_insertion_point(generalized_merge_from_cast_success:GameMsg.Command)
			MergeFrom(*source);
		}
	}

	void Command::MergeFrom(const Command& from) {
		// @@protoc_insertion_point(class_specific_merge_from_start:GameMsg.Command)
		GOOGLE_DCHECK_NE(&from, this);
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		if (from.has_commandparams()) {
			mutable_commandparams()->::GameMsg::CommandParams::MergeFrom(from.commandparams());
		}
		if (from.commandid() != 0) {
			set_commandid(from.commandid());
		}
	}

	void Command::CopyFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_copy_from_start:GameMsg.Command)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	void Command::CopyFrom(const Command& from) {
		// @@protoc_insertion_point(class_specific_copy_from_start:GameMsg.Command)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	bool Command::IsInitialized() const {
		return true;
	}

	void Command::Swap(Command* other) {
		if (other == this) return;
		InternalSwap(other);
	}
	void Command::InternalSwap(Command* other) {
		using std::swap;
		swap(commandparams_, other->commandparams_);
		swap(commandid_, other->commandid_);
		_internal_metadata_.Swap(&other->_internal_metadata_);
		swap(_cached_size_, other->_cached_size_);
	}

	::google::protobuf::Metadata Command::GetMetadata() const {
		protobuf_Command_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_Command_2eproto::file_level_metadata[kIndexInFileMessages];
	}


	// ===================================================================

	void CommandParams::InitAsDefaultInstance() {
		::GameMsg::_CommandParams_default_instance_._instance.get_mutable()->logininfo_ = const_cast<::GameMsg::LoginInfo*>(
			::GameMsg::LoginInfo::internal_default_instance());
		::GameMsg::_CommandParams_default_instance_._instance.get_mutable()->gameoperation_ = const_cast<::GameMsg::GameOperation*>(
			::GameMsg::GameOperation::internal_default_instance());
	}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
	const int CommandParams::kPlayerIDFieldNumber;
	const int CommandParams::kLoginInfoFieldNumber;
	const int CommandParams::kGameOperationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

	CommandParams::CommandParams()
		: ::google::protobuf::Message(), _internal_metadata_(NULL) {
		if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
			::protobuf_Command_2eproto::InitDefaultsCommandParams();
		}
		SharedCtor();
		// @@protoc_insertion_point(constructor:GameMsg.CommandParams)
	}
	CommandParams::CommandParams(const CommandParams& from)
		: ::google::protobuf::Message(),
		_internal_metadata_(NULL),
		_cached_size_(0) {
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		if (from.has_logininfo()) {
			logininfo_ = new ::GameMsg::LoginInfo(*from.logininfo_);
		}
		else {
			logininfo_ = NULL;
		}
		if (from.has_gameoperation()) {
			gameoperation_ = new ::GameMsg::GameOperation(*from.gameoperation_);
		}
		else {
			gameoperation_ = NULL;
		}
		playerid_ = from.playerid_;
		// @@protoc_insertion_point(copy_constructor:GameMsg.CommandParams)
	}

	void CommandParams::SharedCtor() {
		::memset(&logininfo_, 0, static_cast<size_t>(
			reinterpret_cast<char*>(&playerid_) -
			reinterpret_cast<char*>(&logininfo_)) + sizeof(playerid_));
		_cached_size_ = 0;
	}

	CommandParams::~CommandParams() {
		// @@protoc_insertion_point(destructor:GameMsg.CommandParams)
		SharedDtor();
	}

	void CommandParams::SharedDtor() {
		if (this != internal_default_instance()) delete logininfo_;
		if (this != internal_default_instance()) delete gameoperation_;
	}

	void CommandParams::SetCachedSize(int size) const {
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
	}
	const ::google::protobuf::Descriptor* CommandParams::descriptor() {
		::protobuf_Command_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_Command_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
	}

	const CommandParams& CommandParams::default_instance() {
		::protobuf_Command_2eproto::InitDefaultsCommandParams();
		return *internal_default_instance();
	}

	CommandParams* CommandParams::New(::google::protobuf::Arena* arena) const {
		CommandParams* n = new CommandParams;
		if (arena != NULL) {
			arena->Own(n);
		}
		return n;
	}

	void CommandParams::Clear() {
		// @@protoc_insertion_point(message_clear_start:GameMsg.CommandParams)
		::google::protobuf::uint32 cached_has_bits = 0;
		// Prevent compiler warnings about cached_has_bits being unused
		(void)cached_has_bits;

		if (GetArenaNoVirtual() == NULL && logininfo_ != NULL) {
			delete logininfo_;
		}
		logininfo_ = NULL;
		if (GetArenaNoVirtual() == NULL && gameoperation_ != NULL) {
			delete gameoperation_;
		}
		gameoperation_ = NULL;
		playerid_ = 0;
		_internal_metadata_.Clear();
	}

	bool CommandParams::MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
		::google::protobuf::uint32 tag;
		// @@protoc_insertion_point(parse_start:GameMsg.CommandParams)
		for (;;) {
			::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
			tag = p.first;
			if (!p.second) goto handle_unusual;
			switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
				// int32 playerID = 1;
			case 1: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

					DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
						::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
							input, &playerid_)));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

				  // .GameMsg.LoginInfo loginInfo = 2;
			case 2: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
					DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
						input, mutable_logininfo()));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

				  // .GameMsg.GameOperation gameOperation = 3;
			case 3: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
					DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
						input, mutable_gameoperation()));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

			default: {
			handle_unusual:
				if (tag == 0) {
					goto success;
				}
				DO_(::google::protobuf::internal::WireFormat::SkipField(
					input, tag, _internal_metadata_.mutable_unknown_fields()));
				break;
			}
			}
		}
	success:
		// @@protoc_insertion_point(parse_success:GameMsg.CommandParams)
		return true;
	failure:
		// @@protoc_insertion_point(parse_failure:GameMsg.CommandParams)
		return false;
#undef DO_
	}

	void CommandParams::SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const {
		// @@protoc_insertion_point(serialize_start:GameMsg.CommandParams)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// int32 playerID = 1;
		if (this->playerid() != 0) {
			::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->playerid(), output);
		}

		// .GameMsg.LoginInfo loginInfo = 2;
		if (this->has_logininfo()) {
			::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
				2, *this->logininfo_, output);
		}

		// .GameMsg.GameOperation gameOperation = 3;
		if (this->has_gameoperation()) {
			::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
				3, *this->gameoperation_, output);
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			::google::protobuf::internal::WireFormat::SerializeUnknownFields(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), output);
		}
		// @@protoc_insertion_point(serialize_end:GameMsg.CommandParams)
	}

	::google::protobuf::uint8* CommandParams::InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const {
		(void)deterministic; // Unused
		// @@protoc_insertion_point(serialize_to_array_start:GameMsg.CommandParams)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// int32 playerID = 1;
		if (this->playerid() != 0) {
			target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->playerid(), target);
		}

		// .GameMsg.LoginInfo loginInfo = 2;
		if (this->has_logininfo()) {
			target = ::google::protobuf::internal::WireFormatLite::
				InternalWriteMessageToArray(
					2, *this->logininfo_, deterministic, target);
		}

		// .GameMsg.GameOperation gameOperation = 3;
		if (this->has_gameoperation()) {
			target = ::google::protobuf::internal::WireFormatLite::
				InternalWriteMessageToArray(
					3, *this->gameoperation_, deterministic, target);
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), target);
		}
		// @@protoc_insertion_point(serialize_to_array_end:GameMsg.CommandParams)
		return target;
	}

	size_t CommandParams::ByteSizeLong() const {
		// @@protoc_insertion_point(message_byte_size_start:GameMsg.CommandParams)
		size_t total_size = 0;

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			total_size +=
				::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
					(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()));
		}
		// .GameMsg.LoginInfo loginInfo = 2;
		if (this->has_logininfo()) {
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::MessageSize(
					*this->logininfo_);
		}

		// .GameMsg.GameOperation gameOperation = 3;
		if (this->has_gameoperation()) {
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::MessageSize(
					*this->gameoperation_);
		}

		// int32 playerID = 1;
		if (this->playerid() != 0) {
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::Int32Size(
					this->playerid());
		}

		int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = cached_size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
		return total_size;
	}

	void CommandParams::MergeFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_merge_from_start:GameMsg.CommandParams)
		GOOGLE_DCHECK_NE(&from, this);
		const CommandParams* source =
			::google::protobuf::internal::DynamicCastToGenerated<const CommandParams>(
				&from);
		if (source == NULL) {
			// @@protoc_insertion_point(generalized_merge_from_cast_fail:GameMsg.CommandParams)
			::google::protobuf::internal::ReflectionOps::Merge(from, this);
		}
		else {
			// @@protoc_insertion_point(generalized_merge_from_cast_success:GameMsg.CommandParams)
			MergeFrom(*source);
		}
	}

	void CommandParams::MergeFrom(const CommandParams& from) {
		// @@protoc_insertion_point(class_specific_merge_from_start:GameMsg.CommandParams)
		GOOGLE_DCHECK_NE(&from, this);
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		if (from.has_logininfo()) {
			mutable_logininfo()->::GameMsg::LoginInfo::MergeFrom(from.logininfo());
		}
		if (from.has_gameoperation()) {
			mutable_gameoperation()->::GameMsg::GameOperation::MergeFrom(from.gameoperation());
		}
		if (from.playerid() != 0) {
			set_playerid(from.playerid());
		}
	}

	void CommandParams::CopyFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_copy_from_start:GameMsg.CommandParams)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	void CommandParams::CopyFrom(const CommandParams& from) {
		// @@protoc_insertion_point(class_specific_copy_from_start:GameMsg.CommandParams)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	bool CommandParams::IsInitialized() const {
		return true;
	}

	void CommandParams::Swap(CommandParams* other) {
		if (other == this) return;
		InternalSwap(other);
	}
	void CommandParams::InternalSwap(CommandParams* other) {
		using std::swap;
		swap(logininfo_, other->logininfo_);
		swap(gameoperation_, other->gameoperation_);
		swap(playerid_, other->playerid_);
		_internal_metadata_.Swap(&other->_internal_metadata_);
		swap(_cached_size_, other->_cached_size_);
	}

	::google::protobuf::Metadata CommandParams::GetMetadata() const {
		protobuf_Command_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_Command_2eproto::file_level_metadata[kIndexInFileMessages];
	}


	// ===================================================================

	void LoginInfo::InitAsDefaultInstance() {
	}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
	const int LoginInfo::kUsernameFieldNumber;
	const int LoginInfo::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

	LoginInfo::LoginInfo()
		: ::google::protobuf::Message(), _internal_metadata_(NULL) {
		if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
			::protobuf_Command_2eproto::InitDefaultsLoginInfo();
		}
		SharedCtor();
		// @@protoc_insertion_point(constructor:GameMsg.LoginInfo)
	}
	LoginInfo::LoginInfo(const LoginInfo& from)
		: ::google::protobuf::Message(),
		_internal_metadata_(NULL),
		_cached_size_(0) {
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		if (from.username().size() > 0) {
			username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
		}
		password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		if (from.password().size() > 0) {
			password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
		}
		// @@protoc_insertion_point(copy_constructor:GameMsg.LoginInfo)
	}

	void LoginInfo::SharedCtor() {
		username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		_cached_size_ = 0;
	}

	LoginInfo::~LoginInfo() {
		// @@protoc_insertion_point(destructor:GameMsg.LoginInfo)
		SharedDtor();
	}

	void LoginInfo::SharedDtor() {
		username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}

	void LoginInfo::SetCachedSize(int size) const {
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
	}
	const ::google::protobuf::Descriptor* LoginInfo::descriptor() {
		::protobuf_Command_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_Command_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
	}

	const LoginInfo& LoginInfo::default_instance() {
		::protobuf_Command_2eproto::InitDefaultsLoginInfo();
		return *internal_default_instance();
	}

	LoginInfo* LoginInfo::New(::google::protobuf::Arena* arena) const {
		LoginInfo* n = new LoginInfo;
		if (arena != NULL) {
			arena->Own(n);
		}
		return n;
	}

	void LoginInfo::Clear() {
		// @@protoc_insertion_point(message_clear_start:GameMsg.LoginInfo)
		::google::protobuf::uint32 cached_has_bits = 0;
		// Prevent compiler warnings about cached_has_bits being unused
		(void)cached_has_bits;

		username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		_internal_metadata_.Clear();
	}

	bool LoginInfo::MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
		::google::protobuf::uint32 tag;
		// @@protoc_insertion_point(parse_start:GameMsg.LoginInfo)
		for (;;) {
			::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
			tag = p.first;
			if (!p.second) goto handle_unusual;
			switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
				// string username = 1;
			case 1: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
					DO_(::google::protobuf::internal::WireFormatLite::ReadString(
						input, this->mutable_username()));
					DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
						this->username().data(), static_cast<int>(this->username().length()),
						::google::protobuf::internal::WireFormatLite::PARSE,
						"GameMsg.LoginInfo.username"));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

				  // string password = 2;
			case 2: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
					DO_(::google::protobuf::internal::WireFormatLite::ReadString(
						input, this->mutable_password()));
					DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
						this->password().data(), static_cast<int>(this->password().length()),
						::google::protobuf::internal::WireFormatLite::PARSE,
						"GameMsg.LoginInfo.password"));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

			default: {
			handle_unusual:
				if (tag == 0) {
					goto success;
				}
				DO_(::google::protobuf::internal::WireFormat::SkipField(
					input, tag, _internal_metadata_.mutable_unknown_fields()));
				break;
			}
			}
		}
	success:
		// @@protoc_insertion_point(parse_success:GameMsg.LoginInfo)
		return true;
	failure:
		// @@protoc_insertion_point(parse_failure:GameMsg.LoginInfo)
		return false;
#undef DO_
	}

	void LoginInfo::SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const {
		// @@protoc_insertion_point(serialize_start:GameMsg.LoginInfo)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// string username = 1;
		if (this->username().size() > 0) {
			::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
				this->username().data(), static_cast<int>(this->username().length()),
				::google::protobuf::internal::WireFormatLite::SERIALIZE,
				"GameMsg.LoginInfo.username");
			::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
				1, this->username(), output);
		}

		// string password = 2;
		if (this->password().size() > 0) {
			::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
				this->password().data(), static_cast<int>(this->password().length()),
				::google::protobuf::internal::WireFormatLite::SERIALIZE,
				"GameMsg.LoginInfo.password");
			::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
				2, this->password(), output);
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			::google::protobuf::internal::WireFormat::SerializeUnknownFields(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), output);
		}
		// @@protoc_insertion_point(serialize_end:GameMsg.LoginInfo)
	}

	::google::protobuf::uint8* LoginInfo::InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const {
		(void)deterministic; // Unused
		// @@protoc_insertion_point(serialize_to_array_start:GameMsg.LoginInfo)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// string username = 1;
		if (this->username().size() > 0) {
			::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
				this->username().data(), static_cast<int>(this->username().length()),
				::google::protobuf::internal::WireFormatLite::SERIALIZE,
				"GameMsg.LoginInfo.username");
			target =
				::google::protobuf::internal::WireFormatLite::WriteStringToArray(
					1, this->username(), target);
		}

		// string password = 2;
		if (this->password().size() > 0) {
			::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
				this->password().data(), static_cast<int>(this->password().length()),
				::google::protobuf::internal::WireFormatLite::SERIALIZE,
				"GameMsg.LoginInfo.password");
			target =
				::google::protobuf::internal::WireFormatLite::WriteStringToArray(
					2, this->password(), target);
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), target);
		}
		// @@protoc_insertion_point(serialize_to_array_end:GameMsg.LoginInfo)
		return target;
	}

	size_t LoginInfo::ByteSizeLong() const {
		// @@protoc_insertion_point(message_byte_size_start:GameMsg.LoginInfo)
		size_t total_size = 0;

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			total_size +=
				::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
					(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()));
		}
		// string username = 1;
		if (this->username().size() > 0) {
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::StringSize(
					this->username());
		}

		// string password = 2;
		if (this->password().size() > 0) {
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::StringSize(
					this->password());
		}

		int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = cached_size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
		return total_size;
	}

	void LoginInfo::MergeFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_merge_from_start:GameMsg.LoginInfo)
		GOOGLE_DCHECK_NE(&from, this);
		const LoginInfo* source =
			::google::protobuf::internal::DynamicCastToGenerated<const LoginInfo>(
				&from);
		if (source == NULL) {
			// @@protoc_insertion_point(generalized_merge_from_cast_fail:GameMsg.LoginInfo)
			::google::protobuf::internal::ReflectionOps::Merge(from, this);
		}
		else {
			// @@protoc_insertion_point(generalized_merge_from_cast_success:GameMsg.LoginInfo)
			MergeFrom(*source);
		}
	}

	void LoginInfo::MergeFrom(const LoginInfo& from) {
		// @@protoc_insertion_point(class_specific_merge_from_start:GameMsg.LoginInfo)
		GOOGLE_DCHECK_NE(&from, this);
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		if (from.username().size() > 0) {

			username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
		}
		if (from.password().size() > 0) {

			password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
		}
	}

	void LoginInfo::CopyFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_copy_from_start:GameMsg.LoginInfo)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	void LoginInfo::CopyFrom(const LoginInfo& from) {
		// @@protoc_insertion_point(class_specific_copy_from_start:GameMsg.LoginInfo)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	bool LoginInfo::IsInitialized() const {
		return true;
	}

	void LoginInfo::Swap(LoginInfo* other) {
		if (other == this) return;
		InternalSwap(other);
	}
	void LoginInfo::InternalSwap(LoginInfo* other) {
		using std::swap;
		username_.Swap(&other->username_);
		password_.Swap(&other->password_);
		_internal_metadata_.Swap(&other->_internal_metadata_);
		swap(_cached_size_, other->_cached_size_);
	}

	::google::protobuf::Metadata LoginInfo::GetMetadata() const {
		protobuf_Command_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_Command_2eproto::file_level_metadata[kIndexInFileMessages];
	}


	// ===================================================================

	void GameOperation::InitAsDefaultInstance() {
	}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
	const int GameOperation::kMoveForwardFieldNumber;
	const int GameOperation::kMoveBackFieldNumber;
	const int GameOperation::kMoveLeftFieldNumber;
	const int GameOperation::kMoveRightFieldNumber;
	const int GameOperation::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

	GameOperation::GameOperation()
		: ::google::protobuf::Message(), _internal_metadata_(NULL) {
		if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
			::protobuf_Command_2eproto::InitDefaultsGameOperation();
		}
		SharedCtor();
		// @@protoc_insertion_point(constructor:GameMsg.GameOperation)
	}
	GameOperation::GameOperation(const GameOperation& from)
		: ::google::protobuf::Message(),
		_internal_metadata_(NULL),
		_cached_size_(0) {
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		::memcpy(&moveforward_, &from.moveforward_,
			static_cast<size_t>(reinterpret_cast<char*>(&rotation_) -
				reinterpret_cast<char*>(&moveforward_)) + sizeof(rotation_));
		// @@protoc_insertion_point(copy_constructor:GameMsg.GameOperation)
	}

	void GameOperation::SharedCtor() {
		::memset(&moveforward_, 0, static_cast<size_t>(
			reinterpret_cast<char*>(&rotation_) -
			reinterpret_cast<char*>(&moveforward_)) + sizeof(rotation_));
		_cached_size_ = 0;
	}

	GameOperation::~GameOperation() {
		// @@protoc_insertion_point(destructor:GameMsg.GameOperation)
		SharedDtor();
	}

	void GameOperation::SharedDtor() {
	}

	void GameOperation::SetCachedSize(int size) const {
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
	}
	const ::google::protobuf::Descriptor* GameOperation::descriptor() {
		::protobuf_Command_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_Command_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
	}

	const GameOperation& GameOperation::default_instance() {
		::protobuf_Command_2eproto::InitDefaultsGameOperation();
		return *internal_default_instance();
	}

	GameOperation* GameOperation::New(::google::protobuf::Arena* arena) const {
		GameOperation* n = new GameOperation;
		if (arena != NULL) {
			arena->Own(n);
		}
		return n;
	}

	void GameOperation::Clear() {
		// @@protoc_insertion_point(message_clear_start:GameMsg.GameOperation)
		::google::protobuf::uint32 cached_has_bits = 0;
		// Prevent compiler warnings about cached_has_bits being unused
		(void)cached_has_bits;

		::memset(&moveforward_, 0, static_cast<size_t>(
			reinterpret_cast<char*>(&rotation_) -
			reinterpret_cast<char*>(&moveforward_)) + sizeof(rotation_));
		_internal_metadata_.Clear();
	}

	bool GameOperation::MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
		::google::protobuf::uint32 tag;
		// @@protoc_insertion_point(parse_start:GameMsg.GameOperation)
		for (;;) {
			::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
			tag = p.first;
			if (!p.second) goto handle_unusual;
			switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
				// bool moveForward = 1;
			case 1: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

					DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
						bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
							input, &moveforward_)));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

				  // bool moveBack = 2;
			case 2: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

					DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
						bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
							input, &moveback_)));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

				  // bool moveLeft = 3;
			case 3: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

					DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
						bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
							input, &moveleft_)));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

				  // bool moveRight = 4;
			case 4: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

					DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
						bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
							input, &moveright_)));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

				  // int32 rotation = 5;
			case 5: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

					DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
						::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
							input, &rotation_)));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

			default: {
			handle_unusual:
				if (tag == 0) {
					goto success;
				}
				DO_(::google::protobuf::internal::WireFormat::SkipField(
					input, tag, _internal_metadata_.mutable_unknown_fields()));
				break;
			}
			}
		}
	success:
		// @@protoc_insertion_point(parse_success:GameMsg.GameOperation)
		return true;
	failure:
		// @@protoc_insertion_point(parse_failure:GameMsg.GameOperation)
		return false;
#undef DO_
	}

	void GameOperation::SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const {
		// @@protoc_insertion_point(serialize_start:GameMsg.GameOperation)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// bool moveForward = 1;
		if (this->moveforward() != 0) {
			::google::protobuf::internal::WireFormatLite::WriteBool(1, this->moveforward(), output);
		}

		// bool moveBack = 2;
		if (this->moveback() != 0) {
			::google::protobuf::internal::WireFormatLite::WriteBool(2, this->moveback(), output);
		}

		// bool moveLeft = 3;
		if (this->moveleft() != 0) {
			::google::protobuf::internal::WireFormatLite::WriteBool(3, this->moveleft(), output);
		}

		// bool moveRight = 4;
		if (this->moveright() != 0) {
			::google::protobuf::internal::WireFormatLite::WriteBool(4, this->moveright(), output);
		}

		// int32 rotation = 5;
		if (this->rotation() != 0) {
			::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->rotation(), output);
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			::google::protobuf::internal::WireFormat::SerializeUnknownFields(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), output);
		}
		// @@protoc_insertion_point(serialize_end:GameMsg.GameOperation)
	}

	::google::protobuf::uint8* GameOperation::InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const {
		(void)deterministic; // Unused
		// @@protoc_insertion_point(serialize_to_array_start:GameMsg.GameOperation)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// bool moveForward = 1;
		if (this->moveforward() != 0) {
			target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->moveforward(), target);
		}

		// bool moveBack = 2;
		if (this->moveback() != 0) {
			target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->moveback(), target);
		}

		// bool moveLeft = 3;
		if (this->moveleft() != 0) {
			target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->moveleft(), target);
		}

		// bool moveRight = 4;
		if (this->moveright() != 0) {
			target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->moveright(), target);
		}

		// int32 rotation = 5;
		if (this->rotation() != 0) {
			target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->rotation(), target);
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), target);
		}
		// @@protoc_insertion_point(serialize_to_array_end:GameMsg.GameOperation)
		return target;
	}

	size_t GameOperation::ByteSizeLong() const {
		// @@protoc_insertion_point(message_byte_size_start:GameMsg.GameOperation)
		size_t total_size = 0;

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			total_size +=
				::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
					(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()));
		}
		// bool moveForward = 1;
		if (this->moveforward() != 0) {
			total_size += 1 + 1;
		}

		// bool moveBack = 2;
		if (this->moveback() != 0) {
			total_size += 1 + 1;
		}

		// bool moveLeft = 3;
		if (this->moveleft() != 0) {
			total_size += 1 + 1;
		}

		// bool moveRight = 4;
		if (this->moveright() != 0) {
			total_size += 1 + 1;
		}

		// int32 rotation = 5;
		if (this->rotation() != 0) {
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::Int32Size(
					this->rotation());
		}

		int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = cached_size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
		return total_size;
	}

	void GameOperation::MergeFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_merge_from_start:GameMsg.GameOperation)
		GOOGLE_DCHECK_NE(&from, this);
		const GameOperation* source =
			::google::protobuf::internal::DynamicCastToGenerated<const GameOperation>(
				&from);
		if (source == NULL) {
			// @@protoc_insertion_point(generalized_merge_from_cast_fail:GameMsg.GameOperation)
			::google::protobuf::internal::ReflectionOps::Merge(from, this);
		}
		else {
			// @@protoc_insertion_point(generalized_merge_from_cast_success:GameMsg.GameOperation)
			MergeFrom(*source);
		}
	}

	void GameOperation::MergeFrom(const GameOperation& from) {
		// @@protoc_insertion_point(class_specific_merge_from_start:GameMsg.GameOperation)
		GOOGLE_DCHECK_NE(&from, this);
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		if (from.moveforward() != 0) {
			set_moveforward(from.moveforward());
		}
		if (from.moveback() != 0) {
			set_moveback(from.moveback());
		}
		if (from.moveleft() != 0) {
			set_moveleft(from.moveleft());
		}
		if (from.moveright() != 0) {
			set_moveright(from.moveright());
		}
		if (from.rotation() != 0) {
			set_rotation(from.rotation());
		}
	}

	void GameOperation::CopyFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_copy_from_start:GameMsg.GameOperation)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	void GameOperation::CopyFrom(const GameOperation& from) {
		// @@protoc_insertion_point(class_specific_copy_from_start:GameMsg.GameOperation)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	bool GameOperation::IsInitialized() const {
		return true;
	}

	void GameOperation::Swap(GameOperation* other) {
		if (other == this) return;
		InternalSwap(other);
	}
	void GameOperation::InternalSwap(GameOperation* other) {
		using std::swap;
		swap(moveforward_, other->moveforward_);
		swap(moveback_, other->moveback_);
		swap(moveleft_, other->moveleft_);
		swap(moveright_, other->moveright_);
		swap(rotation_, other->rotation_);
		_internal_metadata_.Swap(&other->_internal_metadata_);
		swap(_cached_size_, other->_cached_size_);
	}

	::google::protobuf::Metadata GameOperation::GetMetadata() const {
		protobuf_Command_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_Command_2eproto::file_level_metadata[kIndexInFileMessages];
	}


	// @@protoc_insertion_point(namespace_scope)
}  // namespace GameMsg

// @@protoc_insertion_point(global_scope)
